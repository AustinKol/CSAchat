{"version":3,"sources":["assets/conversation-animate.svg","assets/example-animate.svg","components/Home.tsx","components/SelfHelp.tsx","components/ChatPage.tsx","components/TeacherDashboard.tsx","components/SignIn.tsx","components/AnonChat.tsx","components/About.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Home","Container","Row","Col","md","bsPrefix","Jumbotron","className","style","backgroundColor","Button","as","Link","to","variant","src","Art","alt","chatButton","SelfHelp","ChatPage","props","firestore","firebase","useState","formValue","setFormValue","scrollThing","useRef","userMessages","collection","doc","uid","query","orderBy","roomClose","sendMessage","msg","person","a","console","log","get","then","data","set","timeCreated","FieldValue","serverTimestamp","isFinished","add","text","time","update","thread","useCollectionData","messages","left","maxWidth","wordWrap","placeSelf","borderColor","borderRadius","marginTop","borderWidth","right","center","listMessages","map","i","position","signout","ListGroup","Item","useEffect","current","scrollIntoView","behavior","onClick","paddingBottom","ref","Form","onSubmit","e","preventDefault","Control","value","onChange","c","target","type","placeholder","TeacherDashboard","queue","useCollection","userOrder","loading","error","isChatting","setChatting","horizontal","JSON","stringify","docs","user","idx","Date","toLocaleString","id","SignIn","auth","useAuthState","uiConfig","callbacks","signInSuccessWithAuthResult","authResult","redirectUrl","signInFlow","signInOptions","provider","EmailAuthProvider","PROVIDER_ID","requireDisplayName","isAnonymous","firebaseAuth","AnonChat","hasRun","hist","useHistory","setTimeout","signOut","push","signInAnonymously","About","App","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","basename","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67192bc8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/conversation-animate.3ad3761f.svg\";","export default __webpack_public_path__ + \"static/media/example-animate.edd3b698.svg\";","import React, {useRef} from 'react';\n\nimport { Container, Row, Col, Jumbotron, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport Art from '../assets/conversation-animate.svg';\nimport chatButton from '../assets/example-animate.svg';\nimport Arrow from '../assets/arrow.svg';\n\nfunction Home() {\n    return (\n        <>\n        <Container>\n            <Row>\n                <Col md={6} bsPrefix=\"col align-self-center\">\n                    <Jumbotron className=\"mb-0\" style={{backgroundColor: \"transparent\"}}>\n                        <h1>Bienvenue</h1>\n                        <p>\n                            Nous sommes les pairs-aidants. Nous sommes içi pour vous aider. Chattez avec nous!\n                        </p>\n                        <p>\n                            <Button as={Link} to=\"/about\" variant=\"primary\">Nous connaître plus</Button>\n                        </p>\n                    </Jumbotron>\n                </Col>\n                <Col md={6}><img src={Art} alt=\"Art\" /></Col>\n            </Row>\n        </Container>\n        <Container className=\"hatched\">\n            <Row>\n                <Col className=\"text-center\">\n                    <h1 className=\"pt-5 font-weight-bold font-weight-italic\">Chattez Maintenant!</h1>\n                </Col>\n            </Row>\n            <Row className=\"mt-5 mb-5\">\n                <Col className=\"arrow\">\n                    <span></span>\n                    <span></span>\n                    <span></span>\n                </Col>\n            </Row>\n            <Row>\n                <Col md={12} className=\"justfiy-content-md-center\">\n                    <Link to=\"/anon\">\n                        <img src={chatButton} alt=\"chatButton\"/>\n                    </Link>\n                </Col>\n            </Row>\n        </Container>\n        </>\n    );\n}\n\nexport default Home;","import React from 'react';\n\nfunction SelfHelp() {\n    return (<>\"En progrès\"</>);\n}\n\nexport default SelfHelp;","import React, { useEffect, useRef } from 'react';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nimport { useState } from 'react';\nimport { Button, Container, Form, Row, Col, ListGroup } from 'react-bootstrap';\n\nfunction ChatPage(props:any) {\n    const firestore = firebase.firestore();\n    \n    const [formValue, setFormValue] = useState('');\n    const scrollThing = useRef<HTMLDivElement>(null!);\n\n    const userMessages = firestore.collection('users').doc(props.uid).collection(\"messages\");\n    const query = userMessages.orderBy('time');\n\n    const roomClose = \"Ce chat a été fermé par le modérateur.\";\n\n    const sendMessage = async (msg:any, person:any) => {\n        console.log(\"[II] Checking isFinished and timeCreated\");\n        firestore.collection('users').doc(props.uid).get().then((doc) => {\n            if (doc.data()?.[\"timeCreated\"] && doc.data()?.[\"isFinished\"]) {\n                return;\n            } else {\n                console.log(\"[II] Setting timestamp\");\n                firestore.collection('users').doc(props.uid).set({timeCreated: firebase.firestore.FieldValue.serverTimestamp(), isFinished: false});\n            }\n        });\n        console.log(\"[II] Sending message\");\n        await userMessages.add({\n            text: msg,\n            time: firebase.firestore.FieldValue.serverTimestamp(),\n            person: person\n        });\n        setFormValue('');\n        // Scroll control\n    }\n\n    async function killRoom() {\n        //firestore.collection('users').doc(props.uid).delete();\n        await sendMessage(roomClose, 1);\n        await firestore.collection('users').doc(props.uid).update({isFinished: true});\n        props.thread(\"\");\n    }\n\n    const [messages] = useCollectionData(query);\n    console.log(\"[II] Registering messages query\");\n\n    const left = {maxWidth: \"50%\", wordWrap: \"break-word\", placeSelf: \"flex-start\", borderColor: \"#007bff\", borderRadius: \"3px\", marginTop: \"3px\", borderWidth: \"1px\"};\n    const right = {maxWidth: \"50%\", wordWrap: \"break-word\", placeSelf: \"flex-end\", borderRadius: \"3px\", marginTop: \"3px\", borderWidth: \"1px\"};\n    const center = {wordWrap: \"break-word\", placeSelf: \"flex-center\", borderColor: \"#F01a0a\", borderRadius: \"3px\", marginTop: \"3px\", borderWidth: \"1px\"};\n\n    const listMessages = messages && messages.map((msg:any, i) => {\n        var position:any = left;\n        if (msg[\"person\"]^props.person) {\n            position = left;\n        } else {\n            position = right;\n        }\n        if (msg[\"text\"] === \"\") return(<></>);\n        if (msg[\"text\"] === roomClose && props.person === 0) {\n            props.signout();\n            position = center;\n        }\n        return(\n            <ListGroup.Item style={position} key={i}>\n                {msg[\"text\"]}\n            </ListGroup.Item>\n        );\n    });\n\n    useEffect(() => {\n        scrollThing.current && scrollThing.current.scrollIntoView({behavior: 'smooth'});\n    });\n\n    return (\n        <>\n            <Container className=\"fixed-top\">\n                {\n                    props.person === 1 ?\n                        <Row>\n                            <Col>\n                                <Button onClick={() => props.thread(\"\")}>Retourner au menu</Button>\n                            </Col>\n                            <Col>\n                                <Button onClick={killRoom}>Finir ce chat</Button>\n                            </Col>\n                        </Row>\n                    : <></>\n                }\n            </Container>\n            <Container>\n                <Row>\n                    <Col>\n                        <ListGroup style={{paddingBottom: \"100px\"}}>\n                            {listMessages}\n                            <div ref={scrollThing}></div>\n                        </ListGroup>\n                    </Col>\n                </Row>\n            </Container>\n            <Container className=\"fixed-bottom\" style={{backgroundColor: \"white\"}}>\n                    <Form className=\"input-group mb-3\" onSubmit={async (e) => {e.preventDefault(); sendMessage(formValue, props.person)}}>\n                        <Form.Control value={formValue} onChange={c => setFormValue(c.target.value)} type=\"text\" placeholder=\"Message\" />\n                        <div className=\"input-group-append\">\n                            <Button variant=\"outline-primary\" type=\"submit\">\n                                Envoyer\n                            </Button> \n                        </div>\n                    </Form>\n            </Container>\n        </>\n    );\n}\n\nexport default ChatPage;\n","import firebase from \"firebase\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { Button, ListGroup } from \"react-bootstrap\";\nimport { useCollection } from \"react-firebase-hooks/firestore\";\nimport ChatPage from \"./ChatPage\";\n\nfunction TeacherDashboard() {\n    const firestore = firebase.firestore();\n\n    const users = firestore.collection('users');\n    const queue = users.orderBy(\"timeCreated\", \"desc\");\n\n    const [userOrder, loading, error] = useCollection(queue);\n    console.log(\"[II] Registering teacher dash collection\");\n    const [isChatting, setChatting] = useState(\"\");\n\n    if (isChatting === \"\") {\n        return (\n            <>\n                <strong>\n                    <ListGroup horizontal>\n                        <ListGroup.Item bsPrefix=\"list-group-item col-md-2\">Personne</ListGroup.Item>\n                        <ListGroup.Item bsPrefix=\"list-group-item col-md-4\">Temps Cree</ListGroup.Item>\n                        <ListGroup.Item bsPrefix=\"list-group-item col-md-2\">Lien</ListGroup.Item>\n                    </ListGroup>\n                </strong>\n                {error && <strong>Error: {JSON.stringify(error)}</strong>}\n                {loading && <span>Loading</span>}\n                {\n                    userOrder &&\n                    userOrder.docs.map((user: any, idx:any) => {\n                        //const uidCreated = firestore.collection('users').get()\n                        console.log(user.data());\n                        return(\n                            <ListGroup horizontal>\n                                <ListGroup.Item bsPrefix=\"list-group-item col-md-2\">Personne {idx+1}</ListGroup.Item>\n                                <ListGroup.Item bsPrefix=\"list-group-item col-md-4\">{new Date(user.data()[\"timeCreated\"][\"seconds\"]*1000).toLocaleString()}</ListGroup.Item>\n                                <ListGroup.Item bsPrefix=\"list-group-item col-md-2\"><Button onClick={()=>{setChatting(user.id)}}>Contactez</Button></ListGroup.Item>\n                            </ListGroup>\n                        )\n                    })\n                }\n            </>\n        );\n    }\n    return (\n        <>\n            <ChatPage thread={setChatting} uid={isChatting} person={1}/>\n        </>\n    );\n}\n\nexport default TeacherDashboard;\n\n\n","import firebase from 'firebase';\nimport React from 'react';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { StyledFirebaseAuth } from 'react-firebaseui';\nimport TeacherDashboard from './TeacherDashboard';\n\nfunction SignIn() {\n    const auth = firebase.auth();\n    const [user] = useAuthState(auth);\n    const uiConfig = {\n        callbacks: {\n            signInSuccessWithAuthResult: function(authResult:any, redirectUrl:any) {\n                // var user = authResult.user;\n                // var credential = authResult.credential;\n                // var isNewUser = authResult.additionalUserInfo.isNewUser;\n                // var providerId = authResult.additionalUserInfo.providerId;\n                // var operationType = authResult.operationType;\n                // Do something with the returned AuthResult.\n                // Return type determines whether we continue the redirect\n                // automatically or whether we leave that to developer to handle.\n                return false;\n            }\n        },\n        signInFlow: 'popup',\n        signInOptions: [\n            {\n                provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\n                requireDisplayName: false\n            }\n        ]\n    }\n    \n    return (<>\n        {user && !user.isAnonymous ? <TeacherDashboard/> : <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={auth}/>}\n    </>);\n}\n\nexport default SignIn;","import firebase from \"firebase\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport ChatPage from \"./ChatPage\";\n\nfunction AnonChat() {\n    const auth = firebase.auth();\n    const [user, loading] = useAuthState(auth);\n    const hasRun = useRef(false);\n    //const [signingOut, setSigningOut] = useState(false);\n    let hist = useHistory();\n\n    async function signOut() {\n        //setSigningOut(true);\n        console.log(\"[II] Signing out\")\n        setTimeout(function() {\n            auth.signOut();\n            hist.push(\"/\");\n        }, 3000);\n    }\n\n    useEffect(() => {\n        if (!hasRun.current) {\n            auth.signInAnonymously();\n            console.log(\"[II] Singing in\");\n            hasRun.current = true;\n        }\n    }, [auth]);\n    \n    return (<>\n        {!loading && user?.isAnonymous ? <ChatPage signout={signOut} uid={user.uid} person={0}/> : \"Telechargement en cours...\"}\n    </>);\n}\n\nexport default AnonChat;","import React from 'react';\n\n\nfunction About() {\n    return (<>\"En progrès\"</>);\n}\n\nexport default About;","import React from 'react';\n\nimport Home from './components/Home';\nimport SelfHelp from './components/SelfHelp';\nimport SignIn from './components/SignIn';\n\nimport './styles/DownArrow.css';\n\nimport { Navbar, Nav } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nimport firebase from 'firebase';\nimport TeacherDashboard from './components/TeacherDashboard';\nimport AnonChat from './components/AnonChat';\nimport About from './components/About';\nimport { HashRouter, Link, Route, Switch } from 'react-router-dom';\nimport ChatPage from './components/ChatPage';\n\nfunction App() {\n  if (!firebase.apps.length) {\n    firebase.initializeApp({\n        apiKey: \"AIzaSyDpFJ1vMnojgESGXD-yjlQyIXU8GuJNQLA\",\n        authDomain: \"csachat-9dff3.firebaseapp.com\",\n        databaseURL: \"https://csachat-9dff3-default-rtdb.firebaseio.com\",\n        projectId: \"csachat-9dff3\",\n        storageBucket: \"csachat-9dff3.appspot.com\",\n        messagingSenderId: \"384915371882\",\n        appId: \"1:384915371882:web:2a14a7141b635d69381713\"\n    });\n  } else {\n    console.log(\"[WW] Firebase has already started.\");\n  }\n  \n  return (\n    <HashRouter basename=\"/\">\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand as={Link} to=\"/\">Pairs-Aidants</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link as={Link} to=\"/\">Accueil</Nav.Link>\n            <Nav.Link as={Link} to=\"/selfhelp\">Ressources</Nav.Link>\n            <Nav.Link as={Link} to=\"/about\">Nous connaître</Nav.Link>\n          </Nav>\n          <Nav className=\"ml-auto\">\n            <Nav.Link as={Link} to=\"/signin\">Connexion</Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n      \n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/signin\">\n          <SignIn />\n        </Route>\n        <Route path=\"/selfhelp\">\n          <SelfHelp />\n        </Route>\n        <Route path=\"/teacherdash\">\n          <TeacherDashboard />\n        </Route>\n        <Route path=\"/anon\">\n          <AnonChat />\n        </Route>\n        <Route path=\"/about\">\n          <About />\n        </Route>\n        <Route path=\"/chatpage\">\n          <ChatPage />\n        </Route>\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
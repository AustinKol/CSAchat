{"version":3,"sources":["assets/conversation-animate.svg","assets/example-animate.svg","components/Home.tsx","components/ChatPage.tsx","components/AnonChat.tsx","components/SelfHelp.tsx","components/TeacherDashboard.tsx","components/SignIn.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Home","chatRef","useRef","scrollToChat","current","scrollIntoView","behavior","Container","Row","Col","Jumbotron","style","backgroundColor","Button","variant","src","Art","alt","className","onClick","xs","lg","ref","href","chatButton","ChatPage","props","firestore","firebase","useState","formValue","setFormValue","scrollThing","userMessages","collection","doc","uid","query","orderBy","sendMessage","get","then","data","set","timeCreated","FieldValue","serverTimestamp","msg","person","a","add","text","time","useCollectionData","messages","console","log","ListGroup","map","i","Item","Form","onSubmit","e","preventDefault","Group","controlId","Control","value","onChange","c","target","type","placeholder","AnonChat","auth","useAuthState","user","loading","signInAnonymously","SelfHelp","TeacherDashboard","SignIn","uiConfig","callbacks","signInSuccessWithAuthResult","authResult","redirectUrl","credential","additionalUserInfo","isNewUser","providerId","operationType","signInFlow","signInOptions","provider","EmailAuthProvider","PROVIDER_ID","requireDisplayName","firebaseAuth","App","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5393b772.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/conversation-animate.3ad3761f.svg\";","export default __webpack_public_path__ + \"static/media/example-animate.fe729bb8.svg\";","import React, {useRef} from 'react';\n\nimport { Container, Row, Col, Jumbotron, Button } from 'react-bootstrap';\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Art from '../assets/conversation-animate.svg';\nimport chatButton from '../assets/example-animate.svg';\n\n\nfunction Home() {\n    // useEffect(() => {\n    //     new Pageable(\"#container\");\n    // });\n\n    const chatRef = useRef<HTMLDivElement>(null!);\n\n    function scrollToChat() {\n        chatRef.current.scrollIntoView({behavior:'smooth'})\n    }\n\n\n    return (\n        <Container>\n            <Row>\n                <Col>\n                    <Jumbotron style={{backgroundColor: \"white\"}}>\n                        <h1>Hello, world!</h1>\n                        <p>\n                            This is a simple hero unit, a simple jumbotron-style component for calling\n                            extra attention to featured content or information.\n                        </p>\n                        <p>\n                            <Button variant=\"primary\">Learn more</Button>\n                        </p>\n                    </Jumbotron>\n                </Col>\n                <Col><img src={Art} alt=\"Art\" /></Col>\n            </Row>\n            <Row>\n                <Col>\n                    <div className=\"arrow\" onClick={scrollToChat}>\n                        <span onClick={scrollToChat}></span>\n                        <span onClick={scrollToChat}></span>\n                        <span onClick={scrollToChat}></span>\n                    </div>\n                    <div className=\"patting\">\n                    </div>\n                </Col>  \n            </Row>\n            <Row className=\"justfiy-content-md-center\">\n                <Col xs lg=\"2\">\n                </Col>\n                <Col>\n                    <div ref={chatRef}>\n                        <a href=\"/selfhelp\">\n                            <img src={chatButton} alt=\"chatButton\"/>\n                        </a>\n                    </div>\n                </Col>\n                <Col xs lg=\"2\">\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default Home;","import React, { useRef } from 'react';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nimport { useState } from 'react';\nimport { Button, Container, Form, Row, Col, ListGroup } from 'react-bootstrap';\n\nfunction ChatPage(props:any) {\n    const firestore = firebase.firestore();\n\n    const [formValue, setFormValue] = useState('');\n    const scrollThing = useRef<HTMLDivElement>(null!);\n\n    const userMessages = firestore.collection('users').doc(props.uid).collection(\"messages\");\n    const query = userMessages.orderBy('time');\n\n    const timeCreated = firestore.collection('users').doc(props.uid).get().then((doc) => {\n        if (doc.data()?.[\"timeCreated\"]) {\n            return;\n        } else {\n            firestore.collection('users').doc(props.uid).set({timeCreated: firebase.firestore.FieldValue.serverTimestamp()});\n        }\n    });\n\n    const sendMessage = async (msg:any, person:any) => {\n        await userMessages.add({\n            text: msg,\n            time: firebase.firestore.FieldValue.serverTimestamp(),\n            person: person\n        });\n        setFormValue('');\n        // Scroll control\n        scrollThing.current.scrollIntoView({behavior: 'smooth'});\n    }\n\n    const [messages] = useCollectionData(query);\n\n    console.log(messages);\n\n    return (\n        <>\n            <Container>\n                <Row>\n                    <Col>\n                        <ListGroup>\n                            {messages && messages.map((msg:any, i) => <ListGroup.Item key={i}>{msg[\"text\"]}</ListGroup.Item>)}\n                            <div ref={scrollThing}></div>\n                        </ListGroup>\n                    </Col>\n                </Row>\n                <Form onSubmit={async (e) => {e.preventDefault(); sendMessage(formValue, 0)}}>\n                        <Row>\n                            <Col xs={10}>\n                                <Form.Group controlId=\"msg\">\n                                    <Form.Control value={formValue} onChange={c => setFormValue(c.target.value)} type=\"text\" placeholder=\"Message\" />\n                                </Form.Group>\n                            </Col>\n                            <Col>\n                                <Button variant=\"outline-primary\" type=\"submit\">\n                                    Envoyer\n                                </Button> \n                            </Col>\n                        </Row>\n                </Form>\n            </Container>\n        </>\n    );\n}\n\nexport default ChatPage;\n","import firebase from \"firebase\";\nimport React from \"react\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport ChatPage from \"./ChatPage\";\n\nfunction AnonChat() {\n    const auth = firebase.auth();\n    const [user, loading] = useAuthState(auth);\n    auth.signInAnonymously();\n    return (<>\n        {!loading ? <ChatPage uid={user.uid} /> : \"Telechargement en cours...\"}\n    </>);\n}\n\nexport default AnonChat;","import React from 'react';\nimport AnonChat from './AnonChat';\n\nfunction SelfHelp() {\n    return (<AnonChat />);\n}\n\nexport default SelfHelp;","function TeacherDashboard() {\n    return (<></>);\n}\n\nexport default TeacherDashboard;","import firebase from 'firebase';\nimport * as firebaseui from 'firebaseui';\nimport React, { useEffect } from 'react';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { StyledFirebaseAuth } from 'react-firebaseui';\nimport ChatPage from './ChatPage';\nimport TeacherDashboard from './TeacherDashboard';\n\nfunction SignIn() {\n    const auth = firebase.auth();\n    const [user, loading] = useAuthState(auth);\n    const uiConfig = {\n        callbacks: {\n            signInSuccessWithAuthResult: function(authResult:any, redirectUrl:any) {\n                var user = authResult.user;\n                var credential = authResult.credential;\n                var isNewUser = authResult.additionalUserInfo.isNewUser;\n                var providerId = authResult.additionalUserInfo.providerId;\n                var operationType = authResult.operationType;\n                // Do something with the returned AuthResult.\n                // Return type determines whether we continue the redirect\n                // automatically or whether we leave that to developer to handle.\n                return false;\n            }\n        },\n        signInFlow: 'popup',\n        signInOptions: [\n            {\n                provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\n                requireDisplayName: false\n            }\n        ]\n    }\n    \n    return (<>\n        {user ? <TeacherDashboard/> : <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={auth}/>}\n    </>);\n}\n\nexport default SignIn;","import React from 'react';\n\nimport Home from './components/Home';\nimport SelfHelp from './components/SelfHelp';\nimport SignIn from './components/SignIn';\nimport './styles/DownArrow.css';\n\nimport { Navbar, Nav } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport firebase from 'firebase';\n\nfunction App() {\n  if (!firebase.apps.length) {\n    firebase.initializeApp({\n        apiKey: \"AIzaSyDpFJ1vMnojgESGXD-yjlQyIXU8GuJNQLA\",\n        authDomain: \"csachat-9dff3.firebaseapp.com\",\n        databaseURL: \"https://csachat-9dff3-default-rtdb.firebaseio.com\",\n        projectId: \"csachat-9dff3\",\n        storageBucket: \"csachat-9dff3.appspot.com\",\n        messagingSenderId: \"384915371882\",\n        appId: \"1:384915371882:web:2a14a7141b635d69381713\"\n    });\n  } else {\n    console.log(\"firebase is init\");\n  }\n\n  console.log(\"here\");\n  \n  return (\n    <Router>\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand href=\"/\">Pairs-Aidants</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"/\">Accueil</Nav.Link>\n            <Nav.Link href=\"/signin\">Connection</Nav.Link>\n            <Nav.Link href=\"/selfhelp\">Ressources</Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n      \n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/signin\">\n          <SignIn />\n        </Route>\n        <Route path=\"/selfhelp\">\n          <SelfHelp />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}